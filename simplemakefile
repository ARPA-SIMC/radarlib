
#==============================================================================
# VALUES
#==============================================================================

RMDIR 			= 	rm -f -r 
MKDIR 			= 	mkdir -p
DEL			= 	rm -f
CD			=	cd
MV			=	mv

STLIB			= 	.a
SHLIB			= 	.so

C 			= 	.c
O 			= 	.o
E 			= 	
CC 			= 	g++
LK 			= 	ld
LIB			= 	ar rcs
OUT 			= 	-o

ifeq ($(debug),1)

DEBUG_DEFINES		=	-D_DEBUG
DEBUG_CCFLAGS		=	

else

DEBUG_DEFINES		=	
DEBUG_CCFLAGS		=	-O

endif

CCFLAGS 		= 	-g -c -Wall $(DEBUG_CCFLAGS)
LKFLAGS 		= 	 

SYSLIBS			= 	-L.			
SYSINCLUDES		= 	-I.
SYSDEFINES		= 	

#===============================================================================
# HDF5 LIBRARY & SZIP
#===============================================================================

SZIP_BASEDIR		=	/home/guido/szip2-linux2.6-enc/
SZIP_INCLUDES		=	$(SZIP_BASEDIR)include/
SZIP_LIBDIR		=	$(SZIP_BASEDIR)lib/
SZIP_LKFLAGS		=	-L$(SZIP_LIBDIR) -lsz

HDF5_BASEDIR		=	/home/guido/hdf5-1.8.4-linux-static/
HDF5_INCLUDES		=	$(HDF5_BASEDIR)include/
HDF5_LIBDIR		=	$(HDF5_BASEDIR)lib/
HDF5_LKFLAGS		=	-L$(HDF5_LIBDIR) -lhdf5_hl_cpp -lhdf5_hl -lhdf5_cpp -lhdf5 -lz $(SZIP_LKFLAGS)


#===============================================================================
# DIRS
#===============================================================================

BASEDIR			= 	./

SRCDIR_BASE		= 	$(BASEDIR)src/
INCLUDEDIR_BASE		=	$(BASEDIR)src/
OUTDIR_BASE		=	$(BASEDIR)bin/

$(OUTDIR_BASE):
	$(MKDIR) $(OUTDIR_BASE)

#==============================================================================
# UTILS 
#==============================================================================

UTILS_SRCDIR		=	$(SRCDIR_BASE)utils/
UTILS_SRCFILES		= 	$(UTILS_SRCDIR)base64utils.cpp \
				$(UTILS_SRCDIR)fileutils.cpp \
				$(UTILS_SRCDIR)stringutils.cpp \
				$(UTILS_SRCDIR)timeutils.cpp \
				$(UTILS_SRCDIR)zlibutils.cpp

UTILS_CCFLAGS		=	$(CCFLAGS)
UTILS_DEFINES		= 	$(SYSDEFINES)
UTILS_INCLUDES		= 	$(SYSINCLUDES) -I$(UTILS_SRCDIR)

UTILS_OBJDIR		= 	$(OUTDIR_BASE)utils/
UTILS_OBJS 		= 	$(subst $(UTILS_SRCDIR),$(UTILS_OBJDIR),$(subst .cpp,.o,$(UTILS_SRCFILES)))

$(UTILS_OBJDIR)%.o : $(UTILS_SRCDIR)%.cpp
	$(MKDIR) $(UTILS_OBJDIR)
	$(CC) $(UTILS_CCFLAGS) $(UTILS_INCLUDES) $(UTILS_DEFINES) -c $< -o $@
	
#==============================================================================
# ODIM
#==============================================================================

ODIM_SRCDIR		=	$(SRCDIR_BASE)odim/
ODIM_SRCFILES		= 	$(ODIM_SRCDIR)odimh5v20arpav10_classes.cpp \
				$(ODIM_SRCDIR)odimh5v20_const.cpp \
				$(ODIM_SRCDIR)odimh5v20_factory.cpp \
				$(ODIM_SRCDIR)odimh5v20_metadata.cpp \
				$(ODIM_SRCDIR)odimh5v20_classes.cpp \
				$(ODIM_SRCDIR)odimh5v20_dump.cpp \
				$(ODIM_SRCDIR)odimh5v20_hdf5.cpp \
				$(ODIM_SRCDIR)odimh5v20_support.cpp  

ODIM_CCFLAGS		=	$(CCFLAGS)
ODIM_DEFINES		= 	$(SYSDEFINES)
ODIM_INCLUDES		= 	$(UTILS_INCLUDES) -I$(ODIM_SRCDIR) -I$(HDF5_INCLUDES)

ODIM_OBJDIR		= 	$(OUTDIR_BASE)odim/
ODIM_OBJS 		= 	$(subst $(ODIM_SRCDIR),$(ODIM_OBJDIR),$(subst .cpp,.o,$(ODIM_SRCFILES)))
 
$(ODIM_OBJDIR)%.o : $(ODIM_SRCDIR)%.cpp
	$(MKDIR) $(ODIM_OBJDIR)
	$(CC) $(ODIM_CCFLAGS) $(ODIM_INCLUDES) $(ODIM_DEFINES) -c $< -o $@


#==============================================================================
# LIBRADAR
#==============================================================================

LIBRADAROBJS = $(ODIM_OBJS) $(UTILS_OBJS)

libradar.a : $(LIBRADAROBJS)
	ar rcs libradar.a $(LIBRADAROBJS)
	@echo "Static library created"
	
#==============================================================================
# MAIN TARGETS
#==============================================================================

all: libradar.a 
	
clean:
	$(RMDIR) $(OUTDIR_BASE)
	$(RM) *.a

#==============================================================================



































